version: "3.3"

# networks:
  # web:
    # external:
      # name: docker-reverse-proxy_default

services:
  dnsmasq:
    container_name: dnsmasq
    image: jpillora/dnsmasq
    restart: always
    ports:
      - "127.0.0.1:53:53"     # The DNS (netstat -anlp | grep -w LISTEN => If consumed by systemd: https://medium.com/@niktrix/getting-rid-of-systemd-resolved-consuming-port-53-605f0234f32f)
    volumes:
      - ./dnsmasq.conf:/etc/dnsmasq.conf
    cap_add:
      - NET_ADMIN
    environment:
      - HTTP_USER=foo
      - HTTP_PASS=bar
    logging:
      options:
        max-size: 100m
    labels:
      - traefik.http.routers.dnsmasq.rule=Host(`dnsmasq.localhost`)
      - traefik.http.services.traefik.loadbalancer.server.port=8080
      # - "traefik.frontend.rule=Host:dnsmasq.localhost,www.dnsmasq.localhost"
      # - "traefik.enable=true"
      # - "traefik.port=8080"
      # - "traefik.backend=dnsmasq"
      # - "traefik.frontend.headers.SSLRedirect=true"
      # - "traefik.frontend.headers.STSSeconds=315360000"
      # - "traefik.frontend.headers.browserXSSFilter=true"
      # - "traefik.frontend.headers.contentTypeNosniff=true"
      # - "traefik.frontend.headers.forceSTSHeader=true"
      # - "traefik.frontend.headers.STSIncludeSubdomains=true"
      # - "traefik.frontend.headers.STSPreload=true"
      # - "traefik.frontend.headers.frameDeny=true"
      
  traefik:
    container_name: traefik
    image: traefik:2.0 # The official Traefik docker image
    # command: --api --providers.docker --logLevel=DEBUG # Enables the web UI and tells Traefik to listen to docker
    # command: --api --providers.docker # Enables the web UI and tells Traefik to listen to docker
    command:
      - --providers.docker
      - --entrypoints.http.address=:80
      - --entrypoints.ssh.address=:22
      - --api
    ports:
      - "80:80"           # The HTTP port
      - "443:443"         # The HTTPS port
      - "8080:8080"       # The Web UI (enabled by --api)
      - "22:22"           # SSH (for Git)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # So that Traefik can listen to the Docker events
      - ./logs:/logs # Traefik log
      - ./traefik-2.0.toml:/etc/traefik/traefik.toml # Traefik configuration file
      # - ./traefik.toml:/etc/traefik/traefik.toml # Traefik configuration file
      # - ./traefik_config:/etc/traefik # Traefik configuration file
    labels:
      - traefik.http.routers.traefik.rule=Host(`traefik.localhost`)
      - traefik.http.services.traefik.loadbalancer.server.port=8080
      # - "traefik.frontend.rule=Host:traefik.localhost"
      # - "traefik.port=8080"
      
  whoami:
    container_name: whoami
    image: containous/whoami # A container that exposes an API to show its IP address
    labels:
      - traefik.http.routers.whoami.rule=Host(`whoami.localhost`)
      - "traefik.frontend.rule=Host:whoami.docker.localhost"

  test-website-1:
    container_name: test-website-1
    image: fauria/lamp
    volumes:
      - ./test-website-1:/var/www/html
    expose:
      - "80"
    labels:
      - traefik.http.routers.test-website-1.rule=Host(`test-website-1.localhost`)
      # - "traefik.frontend.rule=Host:test-website-1.localhost"

  gitea:
    container_name: gitea
    image: gitea/gitea:latest
    environment:
      - USER_UID=1000
      - USER_GID=1000
    restart: always
    # networks:
      # - gitea
    volumes:
      - ./gitea:/data
    expose:
      - "3000"
      - "22"
    labels:
      # - traefik.http.routers.gitea.rule=Host(`gitea.localhost`)
      # - traefik.http.services.gitea.loadbalancer.server.port=3000
      # - traefik.tcp.routers.gitea.rule=HostSNI(`gitea.localhost`)
      # - traefik.tcp.routers.gitea.rule=HostSNI(`gitea.localhost`)
      # - traefik.tcp.services.gitea.loadbalancer.server.port=22
      # - traefik.tcp.routers.gitea.tls=true
      # - traefik.tcp.routers.gitea.tls.passthrough=true

      - "traefik.enable=true"
      - "traefik.http.routers.gitea-web.rule=Host(`gitea.localhost`)"
      - "traefik.http.routers.gitea-web.entrypoints=http"
      - "traefik.http.routers.gitea-web.service=gitea-web-svc"
      - "traefik.http.services.gitea-web-svc.loadbalancer.server.port=3000"
      - "traefik.tcp.routers.gitea-ssh.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.gitea-ssh.entrypoints=ssh"
      - "traefik.tcp.routers.gitea-ssh.service=gitea-ssh-svc"
      - "traefik.tcp.services.gitea-ssh-svc.loadbalancer.server.port=22"
