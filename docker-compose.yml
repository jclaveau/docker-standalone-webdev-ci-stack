version: "3.3"

# networks:
  # web:
    # external:
      # name: docker-reverse-proxy_default

services:
  dnsmasq:
    container_name: dnsmasq
    image: jpillora/dnsmasq
    restart: always
    ports:
      - "127.0.0.1:53:53"     # The DNS (netstat -anlp | grep -w LISTEN => If consumed by systemd: https://medium.com/@niktrix/getting-rid-of-systemd-resolved-consuming-port-53-605f0234f32f)
    volumes:
      - ./dnsmasq.conf:/etc/dnsmasq.conf
    cap_add:
      - NET_ADMIN
    environment:
      - HTTP_USER=foo
      - HTTP_PASS=bar
    logging:
      options:
        max-size: 100m
    labels:
      - traefik.http.routers.dnsmasq.rule=Host(`dnsmasq.localhost`)
      - traefik.http.services.dnsmasq.loadbalancer.server.port=8080
      - traefik.http.routers.dnsmasq.entrypoints=http
      
      # - traefik.http.middlewares.dnsmasq.headers.stsseconds=315360000
      # - traefik.http.middlewares.dnsmasq.headers.stspreload=true
      # - traefik.http.middlewares.dnsmasq.headers.sslredirect=true
      # - traefik.http.middlewares.dnsmasq.headers.contenttypenosniff=true
      # - traefik.http.middlewares.dnsmasq.headers.custombrowserxssvalue=true
      # - traefik.http.middlewares.dnsmasq.headers.forcestsheader=true
      # - traefik.http.middlewares.dnsmasq.headers.stsincludesubdomains=true
      # - traefik.http.middlewares.dnsmasq.headers.framedeny=true
      
  traefik:
    container_name: traefik
    image: traefik:2.0 # The official Traefik docker image
    command:
      - --providers.docker
      - --api              # enalbe web UI
      - --entrypoints.http.address=:80
      - --entrypoints.ssh.address=:22
      # - --logLevel=DEBUG
    ports:
      - "80:80"           # The HTTP port
      - "443:443"         # The HTTPS port
      - "8080:8080"       # The Web UI (enabled by --api)
      - "22:22"           # SSH (for Git)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # So that Traefik can listen to the Docker events
      - ./logs:/logs # Traefik log
      - ./traefik-2.0.toml:/etc/traefik/traefik.toml # Traefik configuration file
    labels:
      - traefik.http.routers.traefik.rule=Host(`traefik.localhost`)
      - traefik.http.services.traefik.loadbalancer.server.port=8080
      - traefik.http.routers.traefik.entrypoints=http
      
  whoami:
    container_name: whoami
    image: containous/whoami # A container that exposes an API to show its IP address
    labels:
      - traefik.http.routers.whoami.rule=Host(`whoami.localhost`)

  gitea:
    container_name: gitea
    image: gitea/gitea:latest
    environment:
      - USER_UID=1000
      - USER_GID=1000
    restart: always
    volumes:
      - ./gitea:/data
    expose:
      - "3000"
      - "22"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.gitea-web.rule=Host(`gitea.localhost`)"
      - "traefik.http.routers.gitea-web.entrypoints=http"
      - "traefik.http.routers.gitea-web.service=gitea-web-svc"
      - "traefik.http.services.gitea-web-svc.loadbalancer.server.port=3000"
      - "traefik.tcp.routers.gitea-ssh.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.gitea-ssh.entrypoints=ssh"
      - "traefik.tcp.routers.gitea-ssh.service=gitea-ssh-svc"
      - "traefik.tcp.services.gitea-ssh-svc.loadbalancer.server.port=22"
